; fast square 
(require racket/trace)
(define (fast-square x pow)
  (define (square x) 
    (* x x ))
  (define (iseven pow)
     ( even? pow ))
  ( cond (( = pow 1) x)
          ( (iseven pow) (fast-square (square x) (/ pow 2)))
          ( (* x ( fast-square x ( - pow 1)))))) 

(fast-square 2 1)
(fast-square 3 2)
(fast-square 2 4)
(fast-square 2 5)
(fast-square 3 3)


