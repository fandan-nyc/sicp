#lang racket

(require racket/trace)
; simpson's rule to calc the integral 
; h/3 ( y0 + 4 * y1 + 2* y2 + 4 * y3 + 2 * y4 + ... + 4 y[n-1] + yn )
(define (sum term a next b)
  (if ( > a b)
      0
      ( + (term a) (sum term (next a) next b))
      )
  )
; for simpson rule
(define (simpson-rule f a b n)
  (define h
    ( / (- b a) n)
    )
  (define (simpson-term k)
    (* (cond ((or (= 0 k)( = n k)) 1)
             ((even? k) 2.0)
             (else 4.0)
             )
    ( f (+ a (* k h)))
    )
    )
  (define (inc a )
    (+ a 1)
    )
  ( * ( / h 3) (sum simpson-term  0 inc n )) 
  )
    
(define (cube a )
  ( * a a a )
  )

(simpson-rule cube 0 1 5)
(simpson-rule cube 0 1 10)
(simpson-rule cube 0 1 50) 
(simpson-rule cube 0 1 1000)
