#lang racket
;1.3.3 fixing point f(x) = x
(require racket/trace)
(define tolerance 0.00001)
(define (close-enough? a b)
   ( < ( abs ( - a b )) tolerance)
    )
(define (try f guess)
     (let ((next (f guess)))
      (if (close-enough? guess next)
          next 
          (try f next)
          )
      )
    )

(define (fix-point f first-guess)
  (try f first-guess)
  )
(trace try)
(fix-point cos 1.0)
(define (sqrt x)
 (fix-point (lambda (y) ( / ( + y (/ x y)) 2.0)) 1.0)
  )
(sqrt 10)  
