; recursive process 
(define (fab-recur x)
 ( if ( = x 1) 1 (* x (fab (- x 1)))))

; iterative process
(define (fab x)
  (define (fab-iter product counter )
    (if (> counter x) product (fab-iter (* product counter) (+ counter 1) ))
    )
   (fab-iter 1 1 x)
  )
