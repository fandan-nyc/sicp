#lang racket
(require racket/trace)
(define (make-point x y)
  (cons x y)
  )
(define (x-point a)
  (car a)
  )
(define (y-point b)
  (cdr b)
  )
(define (segment x y)
  (cons x y)
  )
(define (print-point p)
  (newline)
  (display "(")
  (display (x-point p))
  (display ",")
  (display (y-point p))
  (display ")")
  )
(define (average x y)
  ( / ( + x y) 2.0))

(define (average-point x y)
  (make-point ( average (x-point x) (x-point y)) (average (y-point x) (y-point y)))
  )

(print-point (average-point (make-point -2 -3) (make-point 7 42)))
