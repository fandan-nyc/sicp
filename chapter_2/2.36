
;2.36 accumulate-n
(define (accumulate op init sequence)
  (if(null? sequence)
     init
     (op (car sequence) (accumulate op init (cdr sequence)))
     )
  )

(define (accumulate-n opt init sequence)
  ( if (null?  sequence)
       null
       (cons (accumulate opt init (car sequence))
             (accumulate-n opt init (cdr sequence))
              )
       )
  )

(accumulate-n + 0 (list (list 1 2 3) (list 4 5 6) (list 7 8 9)))

