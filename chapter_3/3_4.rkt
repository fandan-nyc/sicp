(define (make-account originPassword balance)
  (let ((wrong 0)
        (limit 3)
        (pass originPassword))
  (define (withdraw x)
    (if (>= balance x)
        (begin (set! balance (- balance x))
               balance)
        "insufficient fund"))
  (define (deposite x)
    (set! balance (+ balance x))
    balance) 
  (define (dispatch password func)
    (if (eq? pass password)
        (cond ((eq? func 'withdraw) withdraw)
              ((eq? func 'deposite) deposite)
              (else (lambda(x) "the method does not exist")))
        (begin (set! wrong (+ wrong 1))
               (if (> wrong limit)
                   (lambda(y) "call the police")
                   (lambda (y) "wrong password, try again")))
        )
    )
  dispatch))
